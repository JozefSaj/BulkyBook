<!--If if we are not passing a model to controller, like in this function we can use model based on the data we are collecting on the page-->
@model Category
<form method="post">
    <div class=" border pt-3 mt-4"> <!-- margin top(mt)-->
        <div class="row pb-2">
            <h2 class="text-primary">Delete</h2>
            <hr />
        </div>
        @*<div asp-validation-summary="All"></div>*@
        <div class="mb-3">
            <label asp-for="Name"></label>
            <input asp-for="Name" disabled class="form-control"/>
            @*<label class="form-control">@Model.Name</label>*@
        </div>
        <div class="mb-3">
            <label asp-for="DisplayOrder"></label>
            <input asp-for="Name" disabled class="form-control" />
            @*<label class="form-control">@Model.DisplayOrder</label>*@
        </div>
        <button type="submit"class="btn btn-danger" style="width:150px">Delete</button>
        <a asp-controller ="Category" asp-action="Index" class="btn btn-secondary" style="width:150px">
            Back to list
        </a>
    </div> 
</form>

<!--now the validation are done on client sides, so the side is not realoding, when validation is not valid. Thanks to this code-->
@section Scripts
{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
